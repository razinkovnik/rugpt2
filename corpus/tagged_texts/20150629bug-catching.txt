# sent_id = 9617
# text = Специалисты из Массачусетского технологического университета создали алгоритм Code Phage, способный автоматически исправлять ошибки в исходном коде программ.
1	Специалисты	специалист	NOUN	_	Animacy=Anim|Case=Nom|Gender=Masc|Number=Plur	6	nsubj	_	SpacesBefore=\n
2	из	из	ADP	_	_	5	case	_	_
3	Массачусетского	массачусетский	ADJ	_	Case=Gen|Degree=Pos|Gender=Masc|Number=Sing	5	amod	_	_
4	технологического	технологический	ADJ	_	Case=Gen|Degree=Pos|Gender=Masc|Number=Sing	5	amod	_	_
5	университета	университет	NOUN	_	Animacy=Inan|Case=Gen|Gender=Masc|Number=Sing	1	nmod	_	_
6	создали	создавать	VERB	_	Aspect=Perf|Mood=Ind|Number=Plur|Tense=Past|VerbForm=Fin|Voice=Act	0	root	_	_
7	алгоритм	алгоритм	NOUN	_	Animacy=Inan|Case=Acc|Gender=Masc|Number=Sing	6	obj	_	_
8	Code	code	PROPN	_	Foreign=Yes	7	flat:foreign	_	_
9	Phage	Phage	PROPN	_	Foreign=Yes	8	flat:foreign	_	SpaceAfter=No
10	,	,	PUNCT	_	_	9	punct	_	_
11	способный	способный	ADJ	_	Case=Nom|Degree=Pos|Gender=Masc|Number=Sing	13	acl	_	_
12	автоматически	автоматически	ADV	_	Degree=Pos	13	advmod	_	_
13	исправлять	исправлять	VERB	_	Aspect=Imp|VerbForm=Inf|Voice=Act	6	xcomp	_	_
14	ошибки	ошибка	NOUN	_	Animacy=Inan|Case=Acc|Gender=Fem|Number=Plur	13	obj	_	_
15	в	в	ADP	_	_	17	case	_	_
16	исходном	исходный	ADJ	_	Case=Loc|Degree=Pos|Gender=Masc|Number=Sing	17	amod	_	_
17	коде	код	NOUN	_	Animacy=Inan|Case=Loc|Gender=Masc|Number=Sing	13	obl	_	_
18	программ	программа	NOUN	_	Animacy=Inan|Case=Gen|Gender=Fem|Number=Plur	17	nmod	_	SpaceAfter=No
19	.	.	PUNCT	_	_	18	punct	_	SpaceAfter=No

# sent_id = 9618
# text = Главной особенностью нового приложения стала способность к поиску подходящих заплаток в исполняемом коде программ-доноров, поэтому алгоритм может использовать донорские фрагменты, написанные на любом языке программирования.
1	Главной	главный	ADJ	_	Case=Ins|Degree=Pos|Gender=Fem|Number=Sing	2	amod	_	_
2	особенностью	особенность	NOUN	_	Animacy=Inan|Case=Ins|Gender=Fem|Number=Sing	5	obl	_	_
3	нового	новый	ADJ	_	Case=Gen|Degree=Pos|Gender=Neut|Number=Sing	4	amod	_	_
4	приложения	приложение	NOUN	_	Animacy=Inan|Case=Gen|Gender=Neut|Number=Sing	2	nmod	_	_
5	стала	становиться	VERB	_	Aspect=Perf|Gender=Fem|Mood=Ind|Number=Sing|Tense=Past|VerbForm=Fin|Voice=Mid	0	root	_	_
6	способность	способность	NOUN	_	Animacy=Inan|Case=Nom|Gender=Fem|Number=Sing	5	nsubj	_	_
7	к	к	ADP	_	_	8	case	_	_
8	поиску	поиск	NOUN	_	Animacy=Inan|Case=Dat|Gender=Masc|Number=Sing	6	nmod	_	_
9	подходящих	подходять	VERB	_	Aspect=Imp|Case=Gen|Number=Plur|Tense=Pres|VerbForm=Part|Voice=Act	10	amod	_	_
10	заплаток	заплатка	NOUN	_	Animacy=Inan|Case=Gen|Gender=Fem|Number=Plur	8	nmod	_	_
11	в	в	ADP	_	_	13	case	_	_
12	исполняемом	исполняемый	ADJ	_	Case=Loc|Degree=Pos|Gender=Masc|Number=Sing	13	amod	_	_
13	коде	код	NOUN	_	Animacy=Inan|Case=Loc|Gender=Masc|Number=Sing	5	obl	_	_
14	программ	программа	NOUN	_	Animacy=Inan|Case=Gen|Gender=Fem|Number=Plur	13	nmod	_	SpaceAfter=No
15	-доноров	-донор	NOUN	_	Animacy=Anim|Case=Gen|Gender=Masc|Number=Plur	14	nmod	_	SpaceAfter=No
16	,	,	PUNCT	_	_	15	punct	_	_
17	поэтому	поэтому	ADV	_	Degree=Pos	19	advmod	_	_
18	алгоритм	алгоритм	NOUN	_	Animacy=Inan|Case=Nom|Gender=Masc|Number=Sing	19	nsubj	_	_
19	может	мочь	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	5	parataxis	_	_
20	использовать	использовать	VERB	_	Aspect=Imp|VerbForm=Inf|Voice=Act	19	xcomp	_	_
21	донорские	донорский	ADJ	_	Animacy=Inan|Case=Acc|Degree=Pos|Number=Plur	22	amod	_	_
22	фрагменты	фрагмент	NOUN	_	Animacy=Inan|Case=Acc|Gender=Masc|Number=Plur	20	obj	_	SpaceAfter=No
23	,	,	PUNCT	_	_	22	punct	_	_
24	написанные	писать	VERB	_	Animacy=Inan|Aspect=Perf|Case=Acc|Number=Plur|Tense=Past|VerbForm=Part|Voice=Pass	22	amod	_	_
25	на	на	ADP	_	_	27	case	_	_
26	любом	любой	ADJ	_	Case=Loc|Degree=Pos|Gender=Masc|Number=Sing	27	amod	_	_
27	языке	язык	NOUN	_	Animacy=Inan|Case=Loc|Gender=Masc|Number=Sing	24	obl	_	_
28	программирования	программирование	NOUN	_	Animacy=Inan|Case=Gen|Gender=Neut|Number=Sing	27	nmod	_	SpaceAfter=No
29	.	.	PUNCT	_	_	28	punct	_	SpaceAfter=No

# sent_id = 9619
# text = Исследование опубликовано в сборнике тезисов конференции 36th ACM SIGPLAN Conference on Programming Language Design and Implementation.Новый алгоритм работает по следующему принципу: вначале он получает исходный код "целевой" программы и два набора данных, один из которых успешно исполняется, а другой вызывает ошибку.
1	Исследование	исследование	NOUN	_	Animacy=Inan|Case=Nom|Gender=Neut|Number=Sing	2	nsubj:pass	_	_
2	опубликовано	публиковать	VERB	_	Aspect=Perf|Gender=Neut|Number=Sing|Tense=Past|Variant=Short|VerbForm=Part|Voice=Pass	0	root	_	_
3	в	в	ADP	_	_	4	case	_	_
4	сборнике	сборник	NOUN	_	Animacy=Inan|Case=Loc|Gender=Masc|Number=Sing	2	obl	_	_
5	тезисов	тезис	NOUN	_	Animacy=Inan|Case=Gen|Gender=Masc|Number=Plur	4	nmod	_	_
6	конференции	конференция	NOUN	_	Animacy=Inan|Case=Gen|Gender=Fem|Number=Sing	5	nmod	_	_
7	36th	36th	PROPN	_	Foreign=Yes	6	flat:foreign	_	_
8	ACM	Acm	PROPN	_	Foreign=Yes	7	flat:foreign	_	_
9	SIGPLAN	Sigplan	PROPN	_	Foreign=Yes	8	flat:foreign	_	_
10	Conference	Conference	PROPN	_	Foreign=Yes	9	flat:foreign	_	_
11	on	on	PROPN	_	Foreign=Yes	10	flat:foreign	_	_
12	Programming	Programming	PROPN	_	Foreign=Yes	11	flat:foreign	_	_
13	Language	Language	PROPN	_	Foreign=Yes	12	flat:foreign	_	_
14	Design	design	PROPN	_	Foreign=Yes	13	flat:foreign	_	_
15	and	and	X	_	Foreign=Yes	14	flat:foreign	_	_
16	Implementation.	implementation.	ADJ	_	Case=Gen|Degree=Pos|Number=Plur	15	amod	_	SpaceAfter=No
17	Новый	новый	ADJ	_	Case=Nom|Degree=Pos|Gender=Masc|Number=Sing	18	amod	_	_
18	алгоритм	алгоритм	NOUN	_	Animacy=Inan|Case=Nom|Gender=Masc|Number=Sing	19	nsubj	_	_
19	работает	работать	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	2	conj	_	_
20	по	по	ADP	_	_	22	case	_	_
21	следующему	следующий	ADJ	_	Case=Dat|Degree=Pos|Gender=Masc|Number=Sing	22	amod	_	_
22	принципу	принцип	NOUN	_	Animacy=Inan|Case=Dat|Gender=Masc|Number=Sing	19	obl	_	SpaceAfter=No
23	:	:	PUNCT	_	_	22	punct	_	_
24	вначале	вначале	ADV	_	Degree=Pos	26	advmod	_	_
25	он	он	PRON	_	Case=Nom|Gender=Masc|Number=Sing|Person=3	26	nsubj	_	_
26	получает	получать	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	2	conj	_	_
27	исходный	исходный	ADJ	_	Animacy=Inan|Case=Acc|Degree=Pos|Gender=Masc|Number=Sing	28	amod	_	_
28	код	код	NOUN	_	Animacy=Inan|Case=Acc|Gender=Masc|Number=Sing	26	obj	_	_
29	"	"	PUNCT	_	_	30	punct	_	SpaceAfter=No
30	целевой	целевой	ADJ	_	Case=Gen|Degree=Pos|Gender=Fem|Number=Sing	32	amod	_	SpaceAfter=No
31	"	"	PUNCT	_	_	30	punct	_	_
32	программы	программа	NOUN	_	Animacy=Inan|Case=Gen|Gender=Fem|Number=Sing	28	nmod	_	_
33	и	и	CCONJ	_	_	35	cc	_	_
34	два	два	NUM	_	Case=Nom|Gender=Masc	35	nummod:gov	_	_
35	набора	набор	NOUN	_	Animacy=Inan|Case=Gen|Gender=Masc|Number=Sing	0	conj	_	_
36	данных	данные	NOUN	_	Animacy=Inan|Case=Gen|Number=Plur	35	nmod	_	SpaceAfter=No
37	,	,	PUNCT	_	_	36	punct	_	_
38	один	один	NUM	_	Case=Nom|Gender=Masc	42	nsubj	_	_
39	из	из	ADP	_	_	40	case	_	_
40	которых	который	PRON	_	Case=Gen	38	nmod	_	_
41	успешно	успешно	ADV	_	Degree=Pos	42	advmod	_	_
42	исполняется	исполняться	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Mid	0	conj	_	SpaceAfter=No
43	,	,	PUNCT	_	_	42	punct	_	_
44	а	а	CCONJ	_	_	46	cc	_	_
45	другой	другой	ADJ	_	Case=Nom|Degree=Pos|Gender=Masc|Number=Sing	46	nsubj	_	_
46	вызывает	вызывать	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	0	conj	_	_
47	ошибку	ошибка	NOUN	_	Animacy=Inan|Case=Acc|Gender=Fem|Number=Sing	46	obj	_	SpaceAfter=No
48	.	.	PUNCT	_	_	47	punct	_	SpaceAfter=No

# sent_id = 9620
# text = Алгоритм использует эти наборы данных, чтобы среди программ-доноров найти такую, в которых оба они обрабатываются без ошибки.Далее в исполняемом коде программы донора алгоритм проходит по всем условным переходам, ища такой, чтобы после него два набора входящих данных оказались в разных ветвях.
1	Алгоритм	алгоритм	NOUN	_	Animacy=Inan|Case=Nom|Gender=Masc|Number=Sing	2	nsubj	_	_
2	использует	использовать	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	0	root	_	_
3	эти	этот	DET	_	Case=Acc|Number=Plur	4	amod	_	_
4	наборы	набор	NOUN	_	Animacy=Inan|Case=Acc|Gender=Masc|Number=Plur	2	obj	_	_
5	данных	данные	NOUN	_	Animacy=Inan|Case=Gen|Number=Plur	4	nmod	_	SpaceAfter=No
6	,	,	PUNCT	_	_	5	punct	_	_
7	чтобы	чтобы	SCONJ	_	Mood=Cnd	2	mark	_	_
8	среди	среди	ADP	_	_	9	case	_	_
9	программ	программа	NOUN	_	Animacy=Inan|Case=Gen|Gender=Fem|Number=Plur	21	nmod	_	SpaceAfter=No
10	-доноров	-донор	NOUN	_	Animacy=Anim|Case=Gen|Gender=Masc|Number=Plur	9	nmod	_	_
11	найти	находить	VERB	_	Aspect=Perf|VerbForm=Inf|Voice=Act	9	nsubj	_	_
12	такую	такой	DET	_	Case=Acc|Gender=Fem|Number=Sing	11	obj	_	SpaceAfter=No
13	,	,	PUNCT	_	_	12	punct	_	_
14	в	в	ADP	_	_	15	case	_	_
15	которых	который	PRON	_	Case=Loc	18	obl	_	_
16	оба	оба	NUM	_	Case=Nom|Gender=Masc	17	nummod:gov	_	_
17	они	они	PRON	_	Case=Nom|Number=Plur|Person=3	18	nsubj:pass	_	_
18	обрабатываются	обрабатывавать	VERB	_	Aspect=Imp|Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin|Voice=Pass	12	acl:relcl	_	_
19	без	без	ADP	_	_	20	case	_	_
20	ошибки.	ошибки.	NOUN	_	Animacy=Anim|Case=Ins|Gender=Masc|Number=Sing	18	obl	_	SpaceAfter=No
21	Далее	далеко	ADV	_	Degree=Cmp	24	advmod	_	_
22	в	в	ADP	_	_	24	case	_	_
23	исполняемом	исполняемый	ADJ	_	Case=Loc|Degree=Pos|Gender=Masc|Number=Sing	24	amod	_	_
24	коде	код	NOUN	_	Animacy=Inan|Case=Loc|Gender=Masc|Number=Sing	28	obl	_	_
25	программы	программа	NOUN	_	Animacy=Inan|Case=Gen|Gender=Fem|Number=Sing	24	nmod	_	_
26	донора	донор	NOUN	_	Animacy=Inan|Case=Gen|Gender=Masc|Number=Sing	25	nmod	_	_
27	алгоритм	алгоритм	NOUN	_	Animacy=Inan|Case=Nom|Gender=Masc|Number=Sing	28	nsubj	_	_
28	проходит	проходить	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	0	advcl	_	_
29	по	по	ADP	_	_	32	case	_	_
30	всем	весь	DET	_	Case=Dat|Number=Plur	32	amod	_	_
31	условным	условной	ADJ	_	Case=Dat|Degree=Pos|Number=Plur	32	amod	_	_
32	переходам	переход	NOUN	_	Animacy=Inan|Case=Dat|Gender=Masc|Number=Plur	28	obl	_	SpaceAfter=No
33	,	,	PUNCT	_	_	32	punct	_	_
34	ища	искать	VERB	_	Aspect=Imp|Tense=Pres|VerbForm=Conv|Voice=Act	0	advcl	_	_
35	такой	такой	DET	_	Case=Acc|Gender=Masc|Number=Sing	34	obj	_	SpaceAfter=No
36	,	,	PUNCT	_	_	35	punct	_	_
37	чтобы	чтобы	SCONJ	_	Mood=Cnd	35	mark	_	_
38	после	после	ADP	_	_	39	case	_	_
39	него	он	PRON	_	Case=Gen|Gender=Masc|Number=Sing|Person=3	44	obl	_	_
40	два	два	NUM	_	Case=Nom|Gender=Masc	41	nummod:gov	_	_
41	набора	набор	NOUN	_	Animacy=Inan|Case=Gen|Gender=Masc|Number=Sing	39	nsubj	_	_
42	входящих	входеть	VERB	_	Aspect=Imp|Case=Gen|Number=Plur|Tense=Pres|VerbForm=Part|Voice=Act	43	amod	_	_
43	данных	данные	NOUN	_	Animacy=Inan|Case=Gen|Number=Plur	41	nmod	_	_
44	оказались	оказываться	VERB	_	Aspect=Perf|Mood=Ind|Number=Plur|Tense=Past|VerbForm=Fin|Voice=Mid	35	advcl	_	_
45	в	в	ADP	_	_	47	case	_	_
46	разных	разный	ADJ	_	Case=Loc|Degree=Pos|Number=Plur	47	amod	_	_
47	ветвях	ветвь	NOUN	_	Animacy=Inan|Case=Loc|Gender=Fem|Number=Plur	44	obl	_	SpaceAfter=No
48	.	.	PUNCT	_	_	47	punct	_	SpaceAfter=No

# sent_id = 9621
# text = Идея здесь заключается в том, что с большой вероятностью данный переход как раз содержит необходимую проверку, которая позволяет избежать ошибки.Далее алгоритм в найденном фрагменте исполняемого кода вновь запускает данные, создававшие ошибку, чтобы по результам исполнения построить символьное древо представлений как функцию входных данных.
1	Идея	идея	NOUN	_	Animacy=Inan|Case=Nom|Gender=Fem|Number=Sing	3	nsubj	_	_
2	здесь	здесь	ADV	_	Degree=Pos	3	advmod	_	_
3	заключается	заключаться	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Mid	0	root	_	_
4	в	в	ADP	_	_	5	case	_	_
5	том	то	PRON	_	Animacy=Inan|Case=Loc|Gender=Neut|Number=Sing	3	obl	_	SpaceAfter=No
6	,	,	PUNCT	_	_	5	punct	_	_
7	что	что	SCONJ	_	_	5	mark	_	_
8	с	с	ADP	_	_	10	case	_	_
9	большой	большой	ADJ	_	Case=Ins|Degree=Pos|Gender=Fem|Number=Sing	10	amod	_	_
10	вероятностью	вероятность	NOUN	_	Animacy=Inan|Case=Ins|Gender=Fem|Number=Sing	15	obl	_	_
11	данный	дывать	VERB	_	Aspect=Perf|Case=Nom|Gender=Masc|Number=Sing|Tense=Past|VerbForm=Part|Voice=Pass	12	amod	_	_
12	переход	переход	NOUN	_	Animacy=Inan|Case=Nom|Gender=Masc|Number=Sing	15	nsubj	_	_
13	как	как	SCONJ	_	_	15	advmod	_	_
14	раз	раз	NOUN	_	Animacy=Inan|Case=Acc|Gender=Masc|Number=Sing	13	fixed	_	_
15	содержит	содержать	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	5	advcl	_	_
16	необходимую	необходимый	ADJ	_	Case=Acc|Degree=Pos|Gender=Fem|Number=Sing	17	amod	_	_
17	проверку	проверка	NOUN	_	Animacy=Inan|Case=Acc|Gender=Fem|Number=Sing	15	obj	_	SpaceAfter=No
18	,	,	PUNCT	_	_	17	punct	_	_
19	которая	который	PRON	_	Case=Nom	20	nsubj	_	_
20	позволяет	позволять	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	17	acl:relcl	_	_
21	избежать	избегать	VERB	_	Aspect=Perf|VerbForm=Inf|Voice=Act	20	xcomp	_	_
22	ошибки.	ошибки.	NOUN	_	Animacy=Anim|Case=Ins|Gender=Masc|Number=Sing	21	obl	_	SpaceAfter=No
23	Далее	Далее	ADV	_	Degree=Pos	21	advmod	_	_
24	алгоритм	алгоритм	NOUN	_	Animacy=Inan|Case=Nom|Gender=Masc|Number=Sing	23	nsubj	_	_
25	в	в	ADP	_	_	27	case	_	_
26	найденном	находить	VERB	_	Aspect=Perf|Case=Loc|Gender=Masc|Number=Sing|Tense=Past|VerbForm=Part|Voice=Pass	27	amod	_	_
27	фрагменте	фрагмент	NOUN	_	Animacy=Inan|Case=Loc|Gender=Masc|Number=Sing	24	nmod	_	_
28	исполняемого	исполнять	VERB	_	Aspect=Imp|Case=Gen|Gender=Masc|Number=Sing|Tense=Pres|VerbForm=Part|Voice=Pass	29	amod	_	_
29	кода	код	NOUN	_	Animacy=Inan|Case=Gen|Gender=Masc|Number=Sing	27	nmod	_	_
30	вновь	вновь	ADV	_	Degree=Pos	31	advmod	_	_
31	запускает	запускать	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	0	conj	_	_
32	данные	данные	NOUN	_	Animacy=Inan|Case=Acc|Number=Plur	31	obj	_	SpaceAfter=No
33	,	,	PUNCT	_	_	32	punct	_	_
34	создававшие	создавать	VERB	_	Aspect=Imp|Case=Nom|Number=Plur|Tense=Past|VerbForm=Part|Voice=Act	32	amod	_	_
35	ошибку	ошибка	NOUN	_	Animacy=Inan|Case=Acc|Gender=Fem|Number=Sing	34	obj	_	SpaceAfter=No
36	,	,	PUNCT	_	_	35	punct	_	_
37	чтобы	чтобы	SCONJ	_	Mood=Cnd	31	mark	_	_
38	по	по	ADP	_	_	39	case	_	_
39	результам	результ	NOUN	_	Animacy=Inan|Case=Dat|Gender=Masc|Number=Plur	41	obl	_	_
40	исполнения	исполнение	NOUN	_	Animacy=Inan|Case=Gen|Gender=Neut|Number=Sing	39	nmod	_	_
41	построить	строить	VERB	_	Aspect=Perf|VerbForm=Inf|Voice=Act	31	advcl	_	_
42	символьное	символьный	ADJ	_	Case=Acc|Degree=Pos|Gender=Neut|Number=Sing	43	amod	_	_
43	древо	древо	NOUN	_	Animacy=Inan|Case=Acc|Gender=Neut|Number=Sing	41	obj	_	_
44	представлений	представление	NOUN	_	Animacy=Inan|Case=Gen|Gender=Neut|Number=Plur	43	nmod	_	_
45	как	как	SCONJ	_	_	46	cc	_	_
46	функцию	функция	NOUN	_	Animacy=Inan|Case=Acc|Gender=Fem|Number=Sing	41	advmod	_	_
47	входных	входный	ADJ	_	Case=Gen|Degree=Pos|Number=Plur	48	amod	_	_
48	данных	данные	NOUN	_	Animacy=Inan|Case=Gen|Number=Plur	46	nmod	_	SpaceAfter=No
49	.	.	PUNCT	_	_	48	punct	_	SpaceAfter=No

# sent_id = 9622
# text = По этом древу алгоритм создает исходный код на нужном языке программирования.
1	По	по	ADP	_	_	2	case	_	_
2	этом	это	PRON	_	Animacy=Inan|Case=Loc|Gender=Neut|Number=Sing	5	obl	_	_
3	древу	древо	NOUN	_	Animacy=Inan|Case=Dat|Gender=Neut|Number=Sing	5	obl	_	_
4	алгоритм	алгоритм	NOUN	_	Animacy=Inan|Case=Nom|Gender=Masc|Number=Sing	5	nsubj	_	_
5	создает	создавать	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	0	root	_	_
6	исходный	исходный	ADJ	_	Animacy=Inan|Case=Acc|Degree=Pos|Gender=Masc|Number=Sing	7	amod	_	_
7	код	код	NOUN	_	Animacy=Inan|Case=Acc|Gender=Masc|Number=Sing	5	obj	_	_
8	на	на	ADP	_	_	10	case	_	_
9	нужном	нужный	ADJ	_	Case=Loc|Degree=Pos|Gender=Masc|Number=Sing	10	amod	_	_
10	языке	язык	NOUN	_	Animacy=Inan|Case=Loc|Gender=Masc|Number=Sing	7	nmod	_	_
11	программирования	программирование	NOUN	_	Animacy=Inan|Case=Gen|Gender=Neut|Number=Sing	10	nmod	_	SpaceAfter=No
12	.	.	PUNCT	_	_	11	punct	_	SpaceAfter=No

# sent_id = 9623
# text = На последнем шаге алгоритм вставляет новый исходный код в различные участки "целевой" программы, чтобы исправить имеющуюся ошибку, но не внести новых.
1	На	на	ADP	_	_	3	case	_	_
2	последнем	последний	ADJ	_	Case=Loc|Degree=Pos|Gender=Masc|Number=Sing	3	amod	_	_
3	шаге	шаг	NOUN	_	Animacy=Inan|Case=Loc|Gender=Masc|Number=Sing	5	obl	_	_
4	алгоритм	алгоритм	NOUN	_	Animacy=Inan|Case=Nom|Gender=Masc|Number=Sing	5	nsubj	_	_
5	вставляет	вставлять	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	0	root	_	_
6	новый	новый	ADJ	_	Animacy=Inan|Case=Acc|Degree=Pos|Gender=Masc|Number=Sing	8	amod	_	_
7	исходный	исходный	ADJ	_	Animacy=Inan|Case=Acc|Degree=Pos|Gender=Masc|Number=Sing	8	amod	_	_
8	код	код	NOUN	_	Animacy=Inan|Case=Acc|Gender=Masc|Number=Sing	5	obj	_	_
9	в	в	ADP	_	_	8	case	_	_
10	различные	различный	ADJ	_	Animacy=Inan|Case=Acc|Degree=Pos|Number=Plur	11	amod	_	_
11	участки	участок	NOUN	_	Animacy=Inan|Case=Acc|Gender=Masc|Number=Plur	5	obj	_	_
12	"	"	PUNCT	_	_	13	punct	_	SpaceAfter=No
13	целевой	целевой	ADJ	_	Case=Gen|Degree=Pos|Gender=Fem|Number=Sing	15	amod	_	SpaceAfter=No
14	"	"	PUNCT	_	_	13	punct	_	_
15	программы	программа	NOUN	_	Animacy=Inan|Case=Gen|Gender=Fem|Number=Sing	11	nmod	_	SpaceAfter=No
16	,	,	PUNCT	_	_	15	punct	_	_
17	чтобы	чтобы	SCONJ	_	Mood=Cnd	5	mark	_	_
18	исправить	исправливать	VERB	_	Aspect=Perf|VerbForm=Inf|Voice=Act	5	advcl	_	_
19	имеющуюся	иметься	VERB	_	Aspect=Imp|Case=Acc|Gender=Fem|Number=Sing|Tense=Pres|VerbForm=Part|Voice=Mid	20	amod	_	_
20	ошибку	ошибка	NOUN	_	Animacy=Inan|Case=Acc|Gender=Fem|Number=Sing	18	obj	_	SpaceAfter=No
21	,	,	PUNCT	_	_	20	punct	_	_
22	но	но	CCONJ	_	_	24	cc	_	_
23	не	не	PART	_	_	24	advmod	_	_
24	внести	внести	VERB	_	Aspect=Imp|VerbForm=Inf|Voice=Act	0	conj	_	_
25	новых	новый	ADJ	_	Animacy=Anim|Case=Acc|Degree=Pos|Number=Plur	24	obj	_	SpaceAfter=No
26	.	.	PUNCT	_	_	25	punct	_	SpaceAfter=No

# sent_id = 9624
# text = Эта процедура выстроена таким образом, что после внесения заплатки в случае получения данных, способных вызвать ошибку, программа просто завершит свое исполнение.
1	Эта	этот	DET	_	Case=Nom|Gender=Fem|Number=Sing	2	amod	_	_
2	процедура	процедура	NOUN	_	Animacy=Inan|Case=Nom|Gender=Fem|Number=Sing	3	nsubj:pass	_	_
3	выстроена	выстроивать	VERB	_	Aspect=Perf|Gender=Fem|Number=Sing|Tense=Past|Variant=Short|VerbForm=Part|Voice=Pass	0	root	_	_
4	таким	такой	DET	_	Case=Ins|Gender=Masc|Number=Sing	5	amod	_	_
5	образом	образ	NOUN	_	Animacy=Inan|Case=Ins|Gender=Masc|Number=Sing	3	obl	_	SpaceAfter=No
6	,	,	PUNCT	_	_	5	punct	_	_
7	что	что	SCONJ	_	_	3	mark	_	_
8	после	после	ADP	_	_	9	case	_	_
9	внесения	внесение	NOUN	_	Animacy=Inan|Case=Gen|Gender=Neut|Number=Sing	22	obl	_	_
10	заплатки	заплатка	NOUN	_	Animacy=Inan|Case=Gen|Gender=Fem|Number=Sing	9	nmod	_	_
11	в	в	ADP	_	_	12	case	_	_
12	случае	случай	NOUN	_	Animacy=Inan|Case=Loc|Gender=Masc|Number=Sing	13	nmod	_	_
13	получения	получение	NOUN	_	Animacy=Inan|Case=Gen|Gender=Neut|Number=Sing	9	nmod	_	_
14	данных	данные	NOUN	_	Animacy=Inan|Case=Gen|Number=Plur	13	nmod	_	SpaceAfter=No
15	,	,	PUNCT	_	_	14	punct	_	_
16	способных	способный	ADJ	_	Case=Gen|Degree=Pos|Number=Plur	14	amod	_	_
17	вызвать	вызывать	VERB	_	Aspect=Perf|VerbForm=Inf|Voice=Act	16	dep	_	_
18	ошибку	ошибка	NOUN	_	Animacy=Inan|Case=Acc|Gender=Fem|Number=Sing	17	obj	_	SpaceAfter=No
19	,	,	PUNCT	_	_	18	punct	_	_
20	программа	программа	NOUN	_	Animacy=Inan|Case=Nom|Gender=Fem|Number=Sing	22	nsubj	_	_
21	просто	просто	PART	_	_	22	advmod	_	_
22	завершит	завершать	VERB	_	Aspect=Perf|Mood=Ind|Number=Sing|Person=3|Tense=Fut|VerbForm=Fin|Voice=Act	3	advcl	_	_
23	свое	свой	DET	_	Case=Acc|Gender=Neut|Number=Sing	24	amod	_	_
24	исполнение	исполнение	NOUN	_	Animacy=Inan|Case=Acc|Gender=Neut|Number=Sing	22	obj	_	SpaceAfter=No
25	.	.	PUNCT	_	_	24	punct	_	SpaceAfter=No

# sent_id = 9625
# text = Таким образом, алгоритм не вносит никакого нового поведения, а просто локализует "опасный" участок кода и добавляет в этом месте обязательную проверку.По результатам тестирования во всех случаях авторам удалось автоматически исправить ошибки, связанные с делением на ноль и переполнением целочисленного типа.
1	Таким	такой	DET	_	Case=Ins|Gender=Masc|Number=Sing	2	amod	_	_
2	образом	образ	NOUN	_	Animacy=Inan|Case=Ins|Gender=Masc|Number=Sing	6	parataxis	_	SpaceAfter=No
3	,	,	PUNCT	_	_	2	punct	_	_
4	алгоритм	алгоритм	NOUN	_	Animacy=Inan|Case=Nom|Gender=Masc|Number=Sing	6	nsubj	_	_
5	не	не	PART	_	_	6	advmod	_	_
6	вносит	вносить	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	0	root	_	_
7	никакого	никакой	DET	_	Case=Gen|Gender=Neut|Number=Sing	9	amod	_	_
8	нового	новый	ADJ	_	Case=Gen|Degree=Pos|Gender=Neut|Number=Sing	9	amod	_	_
9	поведения	поведение	NOUN	_	Animacy=Inan|Case=Gen|Gender=Neut|Number=Sing	6	obl	_	SpaceAfter=No
10	,	,	PUNCT	_	_	9	punct	_	_
11	а	а	CCONJ	_	_	13	cc	_	_
12	просто	просто	PART	_	_	13	advmod	_	_
13	локализует	локализовать	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	6	conj	_	_
14	"	"	PUNCT	_	_	15	punct	_	SpaceAfter=No
15	опасный	опасный	ADJ	_	Case=Nom|Degree=Pos|Gender=Masc|Number=Sing	17	amod	_	SpaceAfter=No
16	"	"	PUNCT	_	_	15	punct	_	_
17	участок	участок	NOUN	_	Animacy=Inan|Case=Nom|Gender=Masc|Number=Sing	13	nsubj	_	_
18	кода	код	NOUN	_	Animacy=Inan|Case=Gen|Gender=Masc|Number=Sing	17	nmod	_	_
19	и	и	CCONJ	_	_	20	cc	_	_
20	добавляет	добавлять	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	0	conj	_	_
21	в	в	ADP	_	_	23	case	_	_
22	этом	этот	DET	_	Case=Loc|Gender=Neut|Number=Sing	23	amod	_	_
23	месте	место	NOUN	_	Animacy=Inan|Case=Loc|Gender=Neut|Number=Sing	20	obl	_	_
24	обязательную	обязательный	ADJ	_	Case=Acc|Degree=Pos|Gender=Fem|Number=Sing	25	amod	_	_
25	проверку	проверка	NOUN	_	Animacy=Inan|Case=Acc|Gender=Fem|Number=Sing	20	obj	_	SpaceAfter=No
26	.	.	PUNCT	_	_	25	punct	_	SpaceAfter=No
27	По	по	ADP	_	_	28	case	_	_
28	результатам	результат	NOUN	_	Animacy=Inan|Case=Dat|Gender=Masc|Number=Plur	34	obl	_	_
29	тестирования	тестирование	NOUN	_	Animacy=Inan|Case=Gen|Gender=Neut|Number=Sing	28	nmod	_	_
30	во	в	ADP	_	_	32	case	_	_
31	всех	весь	DET	_	Case=Loc|Number=Plur	32	amod	_	_
32	случаях	случай	NOUN	_	Animacy=Inan|Case=Loc|Gender=Masc|Number=Plur	34	obl	_	_
33	авторам	автор	NOUN	_	Animacy=Anim|Case=Dat|Gender=Masc|Number=Plur	34	obl	_	_
34	удалось	удаваться	VERB	_	Aspect=Perf|Gender=Neut|Mood=Ind|Number=Sing|Tense=Past|VerbForm=Fin|Voice=Mid	0	conj	_	_
35	автоматически	автоматически	ADV	_	Degree=Pos	36	advmod	_	_
36	исправить	исправлять	VERB	_	Aspect=Perf|VerbForm=Inf|Voice=Act	34	nsubj	_	_
37	ошибки	ошибка	NOUN	_	Animacy=Inan|Case=Acc|Gender=Fem|Number=Plur	36	obj	_	SpaceAfter=No
38	,	,	PUNCT	_	_	37	punct	_	_
39	связанные	связывать	VERB	_	Animacy=Inan|Aspect=Perf|Case=Acc|Number=Plur|Tense=Past|VerbForm=Part|Voice=Pass	37	amod	_	_
40	с	с	ADP	_	_	41	case	_	_
41	делением	деление	NOUN	_	Animacy=Inan|Case=Ins|Gender=Neut|Number=Sing	39	obl	_	_
42	на	на	ADP	_	_	43	case	_	_
43	ноль	нуль	NOUN	_	Animacy=Inan|Case=Acc|Gender=Masc|Number=Sing	41	nmod	_	_
44	и	и	CCONJ	_	_	45	cc	_	_
45	переполнением	переполнение	NOUN	_	Animacy=Inan|Case=Ins|Gender=Neut|Number=Sing	43	conj	_	_
46	целочисленного	целочисленный	ADJ	_	Case=Gen|Degree=Pos|Gender=Masc|Number=Sing	47	amod	_	_
47	типа	тип	NOUN	_	Animacy=Inan|Case=Gen|Gender=Masc|Number=Sing	45	nmod	_	SpaceAfter=No
48	.	.	PUNCT	_	_	47	punct	_	SpaceAfter=No

# sent_id = 9626
# text = В качестве целевых программ и доноров использовались приложения с открытым кодом.Ученые отмечают, что им впервые удалось создать подобный алгоритм, который к тому же обладает несколькими принципиальными преимуществами.
1	В	в	ADP	_	_	4	case	_	_
2	качестве	качество	NOUN	_	Animacy=Inan|Case=Loc|Gender=Neut|Number=Sing	1	fixed	_	_
3	целевых	целевой	ADJ	_	Case=Gen|Degree=Pos|Number=Plur	4	amod	_	_
4	программ	программа	NOUN	_	Animacy=Inan|Case=Gen|Gender=Fem|Number=Plur	7	obl	_	_
5	и	и	CCONJ	_	_	6	cc	_	_
6	доноров	донор	NOUN	_	Animacy=Anim|Case=Gen|Gender=Masc|Number=Plur	4	conj	_	_
7	использовались	использовать	VERB	_	Aspect=Imp|Mood=Ind|Number=Plur|Tense=Past|VerbForm=Fin|Voice=Pass	0	root	_	_
8	приложения	приложение	NOUN	_	Animacy=Inan|Case=Nom|Gender=Neut|Number=Plur	13	nsubj	_	_
9	с	с	ADP	_	_	11	case	_	_
10	открытым	открытый	ADJ	_	Case=Ins|Degree=Pos|Gender=Masc|Number=Sing	11	amod	_	_
11	кодом.	кодом.	NOUN	_	Animacy=Anim|Case=Ins|Gender=Masc|Number=Sing	8	nmod	_	SpaceAfter=No
12	Ученые	ученый	ADJ	_	Case=Nom|Degree=Pos|Number=Plur	8	amod	_	_
13	отмечают	отмечать	VERB	_	Aspect=Imp|Mood=Ind|Number=Plur|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	7	conj	_	SpaceAfter=No
14	,	,	PUNCT	_	_	13	punct	_	_
15	что	что	SCONJ	_	_	13	mark	_	_
16	им	они	PRON	_	Case=Dat|Number=Plur|Person=3	18	obl	_	_
17	впервые	впервые	ADV	_	Degree=Pos	18	advmod	_	_
18	удалось	удаваться	VERB	_	Aspect=Perf|Gender=Neut|Mood=Ind|Number=Sing|Tense=Past|VerbForm=Fin|Voice=Mid	13	advcl	_	_
19	создать	создавать	VERB	_	Aspect=Perf|VerbForm=Inf|Voice=Act	18	nsubj	_	_
20	подобный	подобный	ADJ	_	Animacy=Inan|Case=Acc|Degree=Pos|Gender=Masc|Number=Sing	21	amod	_	_
21	алгоритм	алгоритм	NOUN	_	Animacy=Inan|Case=Acc|Gender=Masc|Number=Sing	19	obj	_	SpaceAfter=No
22	,	,	PUNCT	_	_	21	punct	_	_
23	который	который	PRON	_	Case=Nom	27	nsubj	_	_
24	к	к	ADP	_	_	25	case	_	_
25	тому	то	PRON	_	Animacy=Inan|Case=Dat|Gender=Neut|Number=Sing	27	obl	_	_
26	же	же	PART	_	_	25	advmod	_	_
27	обладает	обладать	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	21	acl:relcl	_	_
28	несколькими	несколько	NUM	_	Case=Ins	30	nummod	_	_
29	принципиальными	принципиальный	ADJ	_	Case=Ins|Degree=Pos|Number=Plur	30	amod	_	_
30	преимуществами	преимущество	NOUN	_	Animacy=Inan|Case=Ins|Gender=Neut|Number=Plur	27	obl	_	SpaceAfter=No
31	.	.	PUNCT	_	_	30	punct	_	SpaceAfter=No

# sent_id = 9627
# text = Из них, по мнению авторов, главное -- это способность работать с исполняемым кодом доноров, что делает алгоритм независимым от языка программирования.
1	Из	из	ADP	_	_	2	case	_	_
2	них	они	PRON	_	Case=Gen|Number=Plur|Person=3	8	nmod	_	SpaceAfter=No
3	,	,	PUNCT	_	_	2	punct	_	_
4	по	по	ADP	_	_	5	case	_	_
5	мнению	мнение	NOUN	_	Animacy=Inan|Case=Dat|Gender=Neut|Number=Sing	8	parataxis	_	_
6	авторов	автор	NOUN	_	Animacy=Anim|Case=Gen|Gender=Masc|Number=Plur	5	nmod	_	SpaceAfter=No
7	,	,	PUNCT	_	_	6	punct	_	_
8	главное	главное	NOUN	_	Animacy=Inan|Case=Nom|Gender=Neut|Number=Sing	11	nsubj	_	_
9	--	--	PUNCT	_	_	8	punct	_	_
10	это	это	PART	_	_	11	cop	_	_
11	способность	способность	NOUN	_	Animacy=Inan|Case=Nom|Gender=Fem|Number=Sing	0	root	_	_
12	работать	работать	VERB	_	Aspect=Imp|VerbForm=Inf|Voice=Act	11	dep	_	_
13	с	с	ADP	_	_	15	case	_	_
14	исполняемым	исполнять	VERB	_	Aspect=Imp|Case=Ins|Gender=Masc|Number=Sing|Tense=Pres|VerbForm=Part|Voice=Pass	15	amod	_	_
15	кодом	код	NOUN	_	Animacy=Inan|Case=Ins|Gender=Masc|Number=Sing	12	obl	_	_
16	доноров	донор	NOUN	_	Animacy=Anim|Case=Gen|Gender=Masc|Number=Plur	15	nmod	_	SpaceAfter=No
17	,	,	PUNCT	_	_	16	punct	_	_
18	что	что	PRON	_	Case=Nom	19	nsubj	_	_
19	делает	делать	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	0	acl:relcl	_	_
20	алгоритм	алгоритм	NOUN	_	Animacy=Inan|Case=Acc|Gender=Masc|Number=Sing	19	obj	_	_
21	независимым	независимый	ADJ	_	Case=Ins|Degree=Pos|Gender=Masc|Number=Sing	19	amod	_	_
22	от	от	ADP	_	_	23	case	_	_
23	языка	язык	NOUN	_	Animacy=Inan|Case=Gen|Gender=Masc|Number=Sing	21	nmod	_	_
24	программирования	программирование	NOUN	_	Animacy=Inan|Case=Gen|Gender=Neut|Number=Sing	23	nmod	_	SpaceAfter=No
25	.	.	PUNCT	_	_	24	punct	_	SpaceAfter=No

# sent_id = 9628
# text = Также новый подход способен эффективно решить проблему переноса имен переменных из донорского кода в целевой, что также делает метод универсальным.
1	Также	также	CCONJ	_	_	4	cc	_	_
2	новый	новый	ADJ	_	Case=Nom|Degree=Pos|Gender=Masc|Number=Sing	3	amod	_	_
3	подход	подход	NOUN	_	Animacy=Inan|Case=Nom|Gender=Masc|Number=Sing	4	nsubj	_	_
4	способен	способный	ADJ	_	Degree=Pos|Gender=Masc|Number=Sing|Variant=Short	0	root	_	_
5	эффективно	эффективно	ADV	_	Degree=Pos	6	advmod	_	_
6	решить	решать	VERB	_	Aspect=Perf|VerbForm=Inf|Voice=Act	4	dep	_	_
7	проблему	проблема	NOUN	_	Animacy=Inan|Case=Acc|Gender=Fem|Number=Sing	6	obj	_	_
8	переноса	перенос	NOUN	_	Animacy=Inan|Case=Gen|Gender=Masc|Number=Sing	7	nmod	_	_
9	имен	имя	NOUN	_	Animacy=Inan|Case=Gen|Gender=Neut|Number=Plur	8	nmod	_	_
10	переменных	перемать	VERB	_	Aspect=Perf|Case=Gen|Number=Plur|Tense=Past|VerbForm=Part|Voice=Pass	9	amod	_	_
11	из	из	ADP	_	_	13	case	_	_
12	донорского	донорский	ADJ	_	Case=Gen|Degree=Pos|Gender=Masc|Number=Sing	13	amod	_	_
13	кода	код	NOUN	_	Animacy=Inan|Case=Gen|Gender=Masc|Number=Sing	10	obl	_	_
14	в	в	ADP	_	_	15	case	_	_
15	целевой	целевой	ADJ	_	Case=Loc|Degree=Pos|Gender=Fem|Number=Sing	10	obl	_	SpaceAfter=No
16	,	,	PUNCT	_	_	15	punct	_	_
17	что	что	PRON	_	Case=Nom	19	nsubj	_	_
18	также	также	ADV	_	Degree=Pos	19	advmod	_	_
19	делает	делать	VERB	_	Aspect=Imp|Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin|Voice=Act	0	parataxis	_	_
20	метод	метод	NOUN	_	Animacy=Inan|Case=Acc|Gender=Masc|Number=Sing	19	obj	_	_
21	универсальным	универсальный	ADJ	_	Case=Ins|Degree=Pos|Gender=Masc|Number=Sing	20	amod	_	SpaceAfter=No
22	.	.	PUNCT	_	_	21	punct	_	SpaceAfter=No

